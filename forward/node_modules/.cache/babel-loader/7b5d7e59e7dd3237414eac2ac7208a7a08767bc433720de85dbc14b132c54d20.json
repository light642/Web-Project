{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"custom-tree-node\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_tree, {\n      style: {\n        \"max-width\": \"600px\"\n      },\n      data: $setup.dataSource,\n      \"show-checkbox\": \"\",\n      \"node-key\": \"id\",\n      \"default-expand-all\": \"\",\n      \"expand-on-click-node\": false\n    }, {\n      default: _withCtx(({\n        node,\n        data\n      }) => [_createElementVNode(\"span\", _hoisted_1, [_createElementVNode(\"span\", null, _toDisplayString(node.label), 1 /* TEXT */), _createElementVNode(\"span\", null, [_createElementVNode(\"a\", {\n        onClick: $event => $setup.append(data)\n      }, \" Append \", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"a\", {\n        style: {\n          \"margin-left\": \"8px\"\n        },\n        onClick: $event => $setup.remove(node, data)\n      }, \" Delete \", 8 /* PROPS */, _hoisted_3)])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_card","default","_withCtx","_createVNode","_component_el_tree","style","data","$setup","dataSource","node","_createElementVNode","_hoisted_1","_toDisplayString","label","onClick","$event","append","_hoisted_2","remove","_hoisted_3","_"],"sources":["C:\\Users\\Lenovo\\Documents\\webProj\\web\\src\\views\\user\\UserFile.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-tree \r\n            style=\"max-width: 600px\" \r\n            :data=\"dataSource\" \r\n            show-checkbox node-key=\"id\" \r\n            default-expand-all\r\n            :expand-on-click-node=\"false\"\r\n        >\r\n            <template #default=\"{ node, data }\">\r\n                <span class=\"custom-tree-node\">\r\n                    <span>{{ node.label }}</span>\r\n                    <span>\r\n                        <a @click=\"append(data)\"> Append </a>\r\n                        <a style=\"margin-left: 8px\" @click=\"remove(node, data)\"> Delete </a>\r\n                    </span>\r\n                </span>\r\n            </template>\r\n        </el-tree>\r\n    </el-card>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios';\r\n\r\nconst directory = ref({})\r\naxios.get('/dir/user').then((res) => {\r\n    directory.value = res.data;\r\n}) \r\n\r\nlet id = 1000\r\n\r\nconst append = (data) => {\r\n  const newChild = { id: id++, label: 'testtest', children: [] }\r\n  if (!data.children) {\r\n    data.children = []\r\n  }\r\n  data.children.push(newChild)\r\n  dataSource.value = [...dataSource.value]\r\n}\r\n\r\nconst remove = (node, data) => {\r\n  const parent = node.parent\r\n  const children = parent.data.children || parent.data\r\n  const index = children.findIndex((d) => d.id === data.id)\r\n  children.splice(index, 1)\r\n  dataSource.value = [...dataSource.value]\r\n}\r\n\r\nconst dataSource = ref([\r\n  {\r\n    id: 1,\r\n    label: 'Level one 1',\r\n    children: [\r\n      {\r\n        id: 4,\r\n        label: 'Level two 1-1',\r\n        children: [\r\n          {\r\n            id: 9,\r\n            label: 'Level three 1-1-1',\r\n          },\r\n          {\r\n            id: 10,\r\n            label: 'Level three 1-1-2',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Level one 2',\r\n    children: [\r\n      {\r\n        id: 5,\r\n        label: 'Level two 2-1',\r\n      },\r\n      {\r\n        id: 6,\r\n        label: 'Level two 2-2',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Level one 3',\r\n    children: [\r\n      {\r\n        id: 7,\r\n        label: 'Level two 3-1',\r\n      },\r\n      {\r\n        id: 8,\r\n        label: 'Level two 3-2',\r\n      },\r\n    ],\r\n  },\r\n])\r\n</script>"],"mappings":";;EAUsBA,KAAK,EAAC;AAAkB;mBAV9C;mBAAA;;;;uBACIC,YAAA,CAkBUC,kBAAA;IAnBdC,OAAA,EAAAC,QAAA,CAEQ,MAgBU,CAhBVC,YAAA,CAgBUC,kBAAA;MAfNC,KAAwB,EAAxB;QAAA;MAAA,CAAwB;MACvBC,IAAI,EAAEC,MAAA,CAAAC,UAAU;MACjB,eAAa,EAAb,EAAa;MAAC,UAAQ,EAAC,IAAI;MAC3B,oBAAkB,EAAlB,EAAkB;MACjB,sBAAoB,EAAE;;MAEZP,OAAO,EAAAC,QAAA,CACd,CAMO;QAPWO,IAAI;QAAEH;MAAI,OAC5BI,mBAAA,CAMO,QANPC,UAMO,GALHD,mBAAA,CAA6B,cAAAE,gBAAA,CAApBH,IAAI,CAACI,KAAK,kBACnBH,mBAAA,CAGO,eAFHA,mBAAA,CAAqC;QAAjCI,OAAK,EAAAC,MAAA,IAAER,MAAA,CAAAS,MAAM,CAACV,IAAI;SAAG,UAAQ,iBAbzDW,UAAA,GAcwBP,mBAAA,CAAoE;QAAjEL,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAAES,OAAK,EAAAC,MAAA,IAAER,MAAA,CAAAW,MAAM,CAACT,IAAI,EAAEH,IAAI;SAAG,UAAQ,iBAdxFa,UAAA,E;MAAAC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}