{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8d22d5b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"width\": \"300px\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return $data.activeForm === 'login' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    ref: \"loginForm\",\n    model: $data.loginForm,\n    rules: $data.loginRules,\n    \"label-width\": \"80px\",\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.loginForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginForm.username = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.loginForm.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginForm.password = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.login\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登录\")]),\n        _: 1\n      }, 8, [\"onClick\"]), $data.activeForm === 'login' ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"\",\n        class: _normalizeClass({\n          active: $data.activeForm === 'login'\n        }),\n        onClick: _cache[2] || (_cache[2] = $event => $options.switchForm('register'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"注册 \")]),\n        _: 1\n      }, 8, [\"class\"])) : _createCommentVNode(\"\", true)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"model\", \"rules\"])])) : $data.activeForm === 'register' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_form, {\n    ref: \"registerForm\",\n    model: $data.registerForm,\n    rules: $data.registerRules,\n    \"label-width\": \"80px\",\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.registerForm.username,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.registerForm.username = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.registerForm.password,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.registerForm.password = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.register\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"注册\")]),\n        _: 1\n      }, 8, [\"onClick\"]), $data.activeForm === 'register' ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"\",\n        class: _normalizeClass({\n          active: $data.activeForm === 'register'\n        }),\n        onClick: _cache[5] || (_cache[5] = $event => $options.switchForm('login'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登录 \")]),\n        _: 1\n      }, 8, [\"class\"])) : _createCommentVNode(\"\", true)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"model\", \"rules\"])])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"names":["key","style","$data","activeForm","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","ref","model","loginForm","rules","loginRules","class","default","_withCtx","_component_el_form_item","label","prop","_component_el_input","modelValue","username","_cache","$event","_","type","password","_component_el_button","onClick","$options","login","_createTextVNode","_createBlock","_normalizeClass","active","switchForm","_createCommentVNode","_hoisted_2","registerForm","registerRules","register"],"sources":["D:\\homework\\Web-Project\\forward\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n        <div v-if=\"activeForm === 'login'\"  style=\"width: 300px;\">\r\n            <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"80px\" class=\"login-form\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"loginForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n                    <el-button type=\"\" v-if=\"activeForm === 'login'\" :class=\"{ active: activeForm === 'login' }\"\r\n                        @click=\"switchForm('register')\">注册\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div v-else-if=\"activeForm === 'register'\">\r\n            <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"registerRules\" label-width=\"80px\"\r\n                class=\"login-form\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"registerForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"register\">注册</el-button>\r\n                    <el-button type=\"\" v-if=\"activeForm === 'register'\" :class=\"{ active: activeForm === 'register' }\"\r\n                        @click=\"switchForm('login')\">登录\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            activeForm: 'login',\r\n            loginForm: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            loginRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ]\r\n            },\r\n            registerForm: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            registerRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        switchForm(formName) {\r\n            this.activeForm = formName;\r\n        },\r\n        register() {\r\n            this.$refs.registerForm.validate((valid) => {\r\n                if (valid) {\r\n                    // 执行注册逻辑\r\n                    this.$http.post(\"/user/register\", this.registerForm).then((res) => {\r\n                        console.log(res);\r\n                        localStorage.setItem(\"userId\", res.data.body.id);\r\n                        localStorage.setItem(\"userRole\", res.data.body.role);\r\n                        if (res.data.code == 200) {\r\n                            this.$router.push(\"/meetingRoom\");\r\n                            this.$message.success(\"注册并登录成功\")\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n                } else {\r\n                    console.log('注册失败');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        login() {\r\n            this.$refs.loginForm.validate((valid) => {\r\n                if (valid) {\r\n                    // 执行登录逻辑\r\n                    this.$http.post(\"/user/login\", this.loginForm).then((res) => {\r\n                        if (res.data.code == 200) {\r\n                            localStorage.setItem(\"userId\", res.data.body.id);\r\n                            localStorage.setItem(\"userRole\", res.data.body.role);\r\n                            this.$message.success(\"登录成功\")\r\n                            this.$router.push(\"/meetingRoom\");\r\n                        } else {\r\n                            this.$message.error(\"用户名或密码错误\")\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n                } else {\r\n                    console.log('登录失败');\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.form-switch .el-button.active {\r\n    color: #409eff;\r\n}\r\n\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.login-form {\r\n    height: 120px;\r\n    width: 300px;\r\n    padding: 20px;\r\n}\r\n\r\n.el-form-item .el-button {\r\n    margin-left: 10px;\r\n}\r\n\r\n.form-switch .el-button.active {\r\n    color: #409eff;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}