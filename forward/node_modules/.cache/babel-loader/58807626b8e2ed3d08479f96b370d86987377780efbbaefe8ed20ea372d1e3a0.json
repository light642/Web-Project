{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'UserFile',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const clickf = text => {\n      alert(\"clicked \" + text);\n    };\n    const path = ref([{\n      layer: 0,\n      dir: 'root'\n    }]);\n    const directory = ref({});\n    axios.get('/dir/user').then(res => {\n      directory.value = res.data;\n    });\n    const routerViewLocationKey = to => {\n      alert(to);\n    };\n    const __returned__ = {\n      clickf,\n      path,\n      directory,\n      routerViewLocationKey,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","clickf","text","alert","path","layer","dir","directory","get","then","res","value","data","routerViewLocationKey","to"],"sources":["C:/Users/Lenovo/Documents/webProj/web/src/views/user/UserFile.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-tree style=\"max-width: 600px\" :data=\"dataSource\" show-checkbox node-key=\"id\" default-expand-all\r\n            :expand-on-click-node=\"false\">\r\n            <template #default=\"{ node, data }\">\r\n                <span class=\"custom-tree-node\">\r\n                    <span>{{ node.label }}</span>\r\n                    <span>\r\n                        <a @click=\"append(data)\"> Append </a>\r\n                        <a style=\"margin-left: 8px\" @click=\"remove(node, data)\"> Delete </a>\r\n                    </span>\r\n                </span>\r\n            </template>\r\n        </el-tree>\r\n    </el-card>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios';\r\n\r\nconst clickf = (text) => {\r\n    alert(\"clicked \" + text);\r\n}\r\n\r\n\r\nconst path = ref([{ layer: 0, dir: 'root' }])\r\nconst directory = ref({})\r\naxios.get('/dir/user').then((res) => {\r\n    directory.value = res.data;\r\n})\r\nconst routerViewLocationKey = (to) => { alert(to) }\r\n</script>"],"mappings":"AAiBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,MAAM,GAAIC,IAAI,IAAK;MACrBC,KAAK,CAAC,UAAU,GAAGD,IAAI,CAAC;IAC5B,CAAC;IAGD,MAAME,IAAI,GAAGL,GAAG,CAAC,CAAC;MAAEM,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAO,CAAC,CAAC,CAAC;IAC7C,MAAMC,SAAS,GAAGR,GAAG,CAAC,CAAC,CAAC,CAAC;IACzBC,KAAK,CAACQ,GAAG,CAAC,WAAW,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACjCH,SAAS,CAACI,KAAK,GAAGD,GAAG,CAACE,IAAI;IAC9B,CAAC,CAAC;IACF,MAAMC,qBAAqB,GAAIC,EAAE,IAAK;MAAEX,KAAK,CAACW,EAAE,CAAC;IAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}