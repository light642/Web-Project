{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      activeForm: 'login',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      registerForm: {\n        username: '',\n        password: ''\n      },\n      registerRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    switchForm(formName) {\n      this.activeForm = formName;\n    },\n    register() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          axios.post(\"/user/register\", this.registerForm, {\n            withCredentials: true\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.$router.push(\"/meetingRoom\");\n              this.$message.success(\"注册并登录成功\");\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          console.log('注册失败');\n          return false;\n        }\n      });\n    },\n    login() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          axios.post(\"/user/login\", this.loginForm, {\n            withCredentials: true\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.$message.success(\"登录成功\");\n              this.$router.push(\"/meetingRoom\");\n            } else {\n              this.$message.error(\"用户名或密码错误\");\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          console.log('登录失败');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","activeForm","loginForm","username","password","loginRules","required","message","trigger","registerForm","registerRules","methods","switchForm","formName","register","$refs","validate","valid","post","withCredentials","then","res","code","$router","push","$message","success","catch","err","console","log","login","error"],"sources":["D:\\homework\\Web-Project\\forward\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <div v-if=\"activeForm === 'login'\" class=\"form-card\">\r\n        <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"80px\" class=\"login-form\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\" prefix-icon=\"el-icon-user\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" prefix-icon=\"el-icon-lock\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"login\" class=\"full-width\">登录</el-button>\r\n            <el-button @click=\"switchForm('register')\" class=\"full-width\" plain>注册</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <div v-else-if=\"activeForm === 'register'\" class=\"form-card\">\r\n        <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"registerRules\" label-width=\"80px\" class=\"login-form\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"registerForm.username\" placeholder=\"请输入用户名\" prefix-icon=\"el-icon-user\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"请输入密码\" prefix-icon=\"el-icon-lock\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"register\" class=\"full-width\">注册</el-button>\r\n            <el-button @click=\"switchForm('login')\" class=\"full-width\" plain>登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        activeForm: 'login',\r\n        loginForm: {\r\n          username: '',\r\n          password: ''\r\n        },\r\n        loginRules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ]\r\n        },\r\n        registerForm: {\r\n          username: '',\r\n          password: '',\r\n        },\r\n        registerRules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      switchForm(formName) {\r\n        this.activeForm = formName;\r\n      },\r\n      register() {\r\n        this.$refs.registerForm.validate((valid) => {\r\n          if (valid) {\r\n            axios.post(\"/user/register\", this.registerForm, { withCredentials: true })\r\n              .then((res) => {\r\n                if (res.data.code == 200) {\r\n                  this.$router.push(\"/meetingRoom\");\r\n                  this.$message.success(\"注册并登录成功\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          } else {\r\n            console.log('注册失败');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      login() {\r\n        this.$refs.loginForm.validate((valid) => {\r\n          if (valid) {\r\n            axios.post(\"/user/login\", this.loginForm, { withCredentials: true })\r\n              .then((res) => {\r\n                if (res.data.code == 200) {\r\n                  this.$message.success(\"登录成功\");\r\n                  this.$router.push(\"/meetingRoom\");\r\n                } else {\r\n                  this.$message.error(\"用户名或密码错误\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          } else {\r\n            console.log('登录失败');\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  .form-card {\r\n    background: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n    width: 400px;\r\n  }\r\n  \r\n  .login-form {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .el-form-item {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .full-width {\r\n    width: 100%;\r\n  }\r\n  \r\n  .el-button {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .el-input__inner {\r\n    height: 40px;\r\n  }\r\n  \r\n  .el-input__inner:focus {\r\n    border-color: #409eff;\r\n  }\r\n  \r\n  .el-button--primary {\r\n    background-color: #409eff;\r\n    border-color: #409eff;\r\n    color: #fff;\r\n  }\r\n  \r\n  .el-button--primary:hover {\r\n    background-color: #66b1ff;\r\n    border-color: #66b1ff;\r\n  }\r\n  \r\n  .el-button[plain] {\r\n    color: #409eff;\r\n    border-color: #dcdfe6;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAkCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,OAAO;MACnBC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE;QACVF,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,EACtD;QACDJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO;MAExD,CAAC;MACDC,YAAY,EAAE;QACZN,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDM,aAAa,EAAE;QACbP,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,EACtD;QACDJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO;MAExD;IACF,CAAC;EACH,CAAC;EACDG,OAAO,EAAE;IACPC,UAAUA,CAACC,QAAQ,EAAE;MACnB,IAAI,CAACZ,UAAS,GAAIY,QAAQ;IAC5B,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAACN,YAAY,CAACO,QAAQ,CAAEC,KAAK,IAAK;QAC1C,IAAIA,KAAK,EAAE;UACTlB,KAAK,CAACmB,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAACT,YAAY,EAAE;YAAEU,eAAe,EAAE;UAAK,CAAC,EACtEC,IAAI,CAAEC,GAAG,IAAK;YACb,IAAIA,GAAG,CAACrB,IAAI,CAACsB,IAAG,IAAK,GAAG,EAAE;cACxB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;cACjC,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,SAAS,CAAC;YAClC;UACF,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;YACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAClB,CAAC,CAAC;QACN,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;UACnB,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,IAAI,CAAChB,KAAK,CAACb,SAAS,CAACc,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACTlB,KAAK,CAACmB,IAAI,CAAC,aAAa,EAAE,IAAI,CAAChB,SAAS,EAAE;YAAEiB,eAAe,EAAE;UAAK,CAAC,EAChEC,IAAI,CAAEC,GAAG,IAAK;YACb,IAAIA,GAAG,CAACrB,IAAI,CAACsB,IAAG,IAAK,GAAG,EAAE;cACxB,IAAI,CAACG,QAAQ,CAACC,OAAO,CAAC,MAAM,CAAC;cAC7B,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;YACnC,OAAO;cACL,IAAI,CAACC,QAAQ,CAACO,KAAK,CAAC,UAAU,CAAC;YACjC;UACF,CAAC,EACAL,KAAK,CAAEC,GAAG,IAAK;YACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAClB,CAAC,CAAC;QACN,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;UACnB,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}