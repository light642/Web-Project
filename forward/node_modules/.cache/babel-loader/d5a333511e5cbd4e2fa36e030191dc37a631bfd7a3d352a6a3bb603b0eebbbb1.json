{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fbf97f76\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, {\n    shadow: \"hover\"\n  }, {\n    default: _withCtx(() => [$data.activeForm === 'login' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n      ref: \"loginForm\",\n      model: $data.loginForm,\n      rules: $data.loginRules,\n      \"label-width\": \"80px\",\n      class: \"login-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginForm.username = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginForm.password = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.login\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"登录\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), $data.activeForm === 'login' ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"\",\n          class: _normalizeClass({\n            active: $data.activeForm === 'login'\n          }),\n          onClick: _cache[2] || (_cache[2] = $event => $options.switchForm('register'))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"注册 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"class\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])])) : $data.activeForm === 'register' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_form, {\n      ref: \"registerForm\",\n      model: $data.registerForm,\n      rules: $data.registerRules,\n      \"label-width\": \"80px\",\n      class: \"login-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.registerForm.username,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.registerForm.username = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.registerForm.password,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.registerForm.password = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.register\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"注册\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), $data.activeForm === 'register' ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"\",\n          class: _normalizeClass({\n            active: $data.activeForm === 'register'\n          }),\n          onClick: _cache[5] || (_cache[5] = $event => $options.switchForm('login'))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"登录 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"class\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["key","_createBlock","_component_el_card","shadow","default","_withCtx","$data","activeForm","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","ref","model","loginForm","rules","loginRules","class","_component_el_form_item","label","prop","_component_el_input","modelValue","username","_cache","$event","_","type","password","_component_el_button","onClick","$options","login","_createTextVNode","_normalizeClass","active","switchForm","_createCommentVNode","_hoisted_2","registerForm","registerRules","register"],"sources":["C:\\Users\\Lenovo\\Documents\\webProj\\web\\src\\components\\user\\LoginCard.vue"],"sourcesContent":["<template>\r\n    <el-card shadow=\"hover\">\r\n        <div v-if=\"activeForm === 'login'\">\r\n            <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"80px\" class=\"login-form\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"loginForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n                    <el-button type=\"\" v-if=\"activeForm === 'login'\" :class=\"{ active: activeForm === 'login' }\"\r\n                        @click=\"switchForm('register')\">注册\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div v-else-if=\"activeForm === 'register'\">\r\n            <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"registerRules\" label-width=\"80px\"\r\n                class=\"login-form\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"registerForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"register\">注册</el-button>\r\n                    <el-button type=\"\" v-if=\"activeForm === 'register'\" :class=\"{ active: activeForm === 'register' }\"\r\n                        @click=\"switchForm('login')\">登录\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            activeForm: 'login',\r\n            loginForm: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            loginRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ]\r\n            },\r\n            registerForm: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            registerRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        switchForm(formName) {\r\n            this.activeForm = formName;\r\n        },\r\n        register() {\r\n            this.$refs.registerForm.validate((valid) => {\r\n                if (valid) {\r\n                    // 执行注册逻辑\r\n                    this.$http.post(\"/user/register\", this.registerForm).then((res) => {\r\n                        console.log(res);\r\n                        localStorage.setItem(\"userId\", res.data.body.id);\r\n                        localStorage.setItem(\"userRole\", res.data.body.role);\r\n                        if (res.data.code == 200) {\r\n                            this.$router.push(\"/meetingRoom\");\r\n                            this.$message.success(\"注册并登录成功\")\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n                } else {\r\n                    console.log('注册失败');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        login() {\r\n            this.$refs.loginForm.validate((valid) => {\r\n                if (valid) {\r\n                    // 执行登录逻辑\r\n                    this.$http.post(\"/user/login\", this.loginForm).then((res) => {\r\n                        if (res.data.code == 200) {\r\n                            localStorage.setItem(\"userId\", res.data.body.id);\r\n                            localStorage.setItem(\"userRole\", res.data.body.role);\r\n                            this.$message.success(\"登录成功\")\r\n                            this.$router.push(\"/meetingRoom\");\r\n                        } else {\r\n                            this.$message.error(\"用户名或密码错误\")\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n                } else {\r\n                    console.log('登录失败');\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.login-form {\r\n    max-width: 400px;\r\n    width: 100%;\r\n    padding: 20px;\r\n}\r\n\r\n\r\n\r\n\r\n.form-switch .el-button.active {\r\n    color: #409eff;\r\n}\r\n\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.login-form {\r\n    height: 200px;\r\n    width: 400px;\r\n    padding: 20px;\r\n}\r\n\r\n.el-form-item .el-button {\r\n    margin-left: 10px;\r\n}\r\n\r\n.form-switch .el-button.active {\r\n    color: #409eff;\r\n}\r\n</style>"],"mappings":";;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;;;;;uBACIC,YAAA,CAkCUC,kBAAA;IAlCDC,MAAM,EAAC;EAAO;IAD3BC,OAAA,EAAAC,QAAA,CAEQ,MAeM,CAfKC,KAAA,CAAAC,UAAU,gB,cAArBC,mBAAA,CAeM,OAjBdC,UAAA,GAGYC,YAAA,CAaUC,kBAAA;MAbDC,GAAG,EAAC,WAAW;MAAEC,KAAK,EAAEP,KAAA,CAAAQ,SAAS;MAAGC,KAAK,EAAET,KAAA,CAAAU,UAAU;MAAE,aAAW,EAAC,MAAM;MAACC,KAAK,EAAC;;MAHrGb,OAAA,EAAAC,QAAA,CAIgB,MAEe,CAFfK,YAAA,CAEeQ,uBAAA;QAFDC,KAAK,EAAC,KAAK;QAACC,IAAI,EAAC;;QAJ/ChB,OAAA,EAAAC,QAAA,CAKoB,MAAkD,CAAlDK,YAAA,CAAkDW,mBAAA;UALtEC,UAAA,EAKuChB,KAAA,CAAAQ,SAAS,CAACS,QAAQ;UALzD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKuCnB,KAAA,CAAAQ,SAAS,CAACS,QAAQ,GAAAE,MAAA;;QALzDC,CAAA;UAOgBhB,YAAA,CAEeQ,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QAP9ChB,OAAA,EAAAC,QAAA,CAQoB,MAAkE,CAAlEK,YAAA,CAAkEW,mBAAA;UAAxDM,IAAI,EAAC,UAAU;UAR7CL,UAAA,EAQuDhB,KAAA,CAAAQ,SAAS,CAACc,QAAQ;UARzE,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQuDnB,KAAA,CAAAQ,SAAS,CAACc,QAAQ,GAAAH,MAAA;;QARzEC,CAAA;UAUgBhB,YAAA,CAKeQ,uBAAA;QAf/Bd,OAAA,EAAAC,QAAA,CAWoB,MAAuD,CAAvDK,YAAA,CAAuDmB,oBAAA;UAA5CF,IAAI,EAAC,SAAS;UAAEG,OAAK,EAAEC,QAAA,CAAAC;;UAXtD5B,OAAA,EAAAC,QAAA,CAW6D,MAAE,CAX/D4B,gBAAA,CAW6D,IAAE,E;UAX/DP,CAAA;wCAY6CpB,KAAA,CAAAC,UAAU,gB,cAAnCN,YAAA,CAEY4B,oBAAA;UAdhC7B,GAAA;UAY+B2B,IAAI,EAAC,EAAE;UAAgCV,KAAK,EAZ3EiB,eAAA;YAAAC,MAAA,EAYuF7B,KAAA,CAAAC,UAAU;UAAA;UACxEuB,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,QAAA,CAAAK,UAAU;;UAb1ChC,OAAA,EAAAC,QAAA,CAawD,MACpC,CAdpB4B,gBAAA,CAawD,KACpC,E;UAdpBP,CAAA;wCAAAW,mBAAA,e;QAAAX,CAAA;;MAAAA,CAAA;+CAkBwBpB,KAAA,CAAAC,UAAU,mB,cAA1BC,mBAAA,CAgBM,OAlCd8B,UAAA,GAmBY5B,YAAA,CAcUC,kBAAA;MAdDC,GAAG,EAAC,cAAc;MAAEC,KAAK,EAAEP,KAAA,CAAAiC,YAAY;MAAGxB,KAAK,EAAET,KAAA,CAAAkC,aAAa;MAAE,aAAW,EAAC,MAAM;MACvFvB,KAAK,EAAC;;MApBtBb,OAAA,EAAAC,QAAA,CAqBgB,MAEe,CAFfK,YAAA,CAEeQ,uBAAA;QAFDC,KAAK,EAAC,KAAK;QAACC,IAAI,EAAC;;QArB/ChB,OAAA,EAAAC,QAAA,CAsBoB,MAAqD,CAArDK,YAAA,CAAqDW,mBAAA;UAtBzEC,UAAA,EAsBuChB,KAAA,CAAAiC,YAAY,CAAChB,QAAQ;UAtB5D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBuCnB,KAAA,CAAAiC,YAAY,CAAChB,QAAQ,GAAAE,MAAA;;QAtB5DC,CAAA;UAwBgBhB,YAAA,CAEeQ,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QAxB9ChB,OAAA,EAAAC,QAAA,CAyBoB,MAAqE,CAArEK,YAAA,CAAqEW,mBAAA;UAA3DM,IAAI,EAAC,UAAU;UAzB7CL,UAAA,EAyBuDhB,KAAA,CAAAiC,YAAY,CAACX,QAAQ;UAzB5E,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyBuDnB,KAAA,CAAAiC,YAAY,CAACX,QAAQ,GAAAH,MAAA;;QAzB5EC,CAAA;UA2BgBhB,YAAA,CAKeQ,uBAAA;QAhC/Bd,OAAA,EAAAC,QAAA,CA4BoB,MAA0D,CAA1DK,YAAA,CAA0DmB,oBAAA;UAA/CF,IAAI,EAAC,SAAS;UAAEG,OAAK,EAAEC,QAAA,CAAAU;;UA5BtDrC,OAAA,EAAAC,QAAA,CA4BgE,MAAE,CA5BlE4B,gBAAA,CA4BgE,IAAE,E;UA5BlEP,CAAA;wCA6B6CpB,KAAA,CAAAC,UAAU,mB,cAAnCN,YAAA,CAEY4B,oBAAA;UA/BhC7B,GAAA;UA6B+B2B,IAAI,EAAC,EAAE;UAAmCV,KAAK,EA7B9EiB,eAAA;YAAAC,MAAA,EA6B0F7B,KAAA,CAAAC,UAAU;UAAA;UAC3EuB,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,QAAA,CAAAK,UAAU;;UA9B1ChC,OAAA,EAAAC,QAAA,CA8BqD,MACjC,CA/BpB4B,gBAAA,CA8BqD,KACjC,E;UA/BpBP,CAAA;wCAAAW,mBAAA,e;QAAAX,CAAA;;MAAAA,CAAA;+CAAAW,mBAAA,e;IAAAX,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}